name: .NET Framework Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]


jobs:
  test_and_build:
    name: "Test and Build"

    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x86, x64]

    env:
      SolutionFile: ExcelReporter.sln
      ProjectDir: ExcelReporter
      TestOutputLibrary: ExcelReporter.Tests.dll
      TestDir: ExcelReporter.Tests
      TestProject: ExcelReporter.Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Make BuildConstants
      shell: bash
      run: |
        repo_name=${GITHUB_REPOSITORY/"${GITHUB_REPOSITORY_OWNER}/"/""}
        export build_consts_path="${ProjectDir}/BuildConstants.cs"
        
        echo "namespace ExcelReporter {" >> ${build_consts_path}
        echo "public static class BuildConstants {" >> ${build_consts_path}
        echo "public const string GITHUB_USERNAME = \"${GITHUB_REPOSITORY_OWNER}\";" >> ${build_consts_path}
        echo "public const string GITHUB_REPOSITORY = \"${repo_name}\";" >> ${build_consts_path}
        echo "public const string GITHUB_ASSET_NAME = \"excel-reporter-{0}-release\";" >> ${build_consts_path}
        echo "}}" >> ${build_consts_path}

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
       
    # Setup NuGet
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.6

    # Setup VSTest
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
  
    # Restore NuGet Packages
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionFile

    # Test
    - name: Run test
      run: |
        msbuild "${env:TestDir}/${env:TestProject}" /p:Configuration=$env:Configuration /p:Platform=$env:Platform
        vstest.console.exe "${env:TestDir}/bin/${env:Configuration}/${env:TestOutputLibrary}"
      env:
        Configuration: ${{ matrix.configuration }}
        Platform: ${{ matrix.platform }}


  release:
    name: "Release artifact"
    needs: test_and_build

    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest

    env:
      SolutionFile: ExcelReporter.sln
      ProjectDir: ExcelReporter
      SetupDir: SetupProject
      ProjectAssemblyInfo: ExcelReporter/Properties/AssemblyInfo.cs
      SetupProductFile: SetupProject/Product.wxs
      Configuration: Release
      SignDir: signcert

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Make BuildConstants
      shell: bash
      run: |
        repo_name=${GITHUB_REPOSITORY/"${GITHUB_REPOSITORY_OWNER}/"/""}
        export build_consts_path="${ProjectDir}/BuildConstants.cs"
        
        echo "namespace ExcelReporter {" >> ${build_consts_path}
        echo "public static class BuildConstants {" >> ${build_consts_path}
        echo "public const string GITHUB_USERNAME = \"${GITHUB_REPOSITORY_OWNER}\";" >> ${build_consts_path}
        echo "public const string GITHUB_REPOSITORY = \"${repo_name}\";" >> ${build_consts_path}
        echo "public const string GITHUB_ASSET_NAME = \"excel-reporter-{0}-release\";" >> ${build_consts_path}
        echo "}}" >> ${build_consts_path}

    - name: Modify version of the assembly
      shell: bash
      run: |
        tag=$(git describe --tags --abbrev=0)
        version=${tag/"v"/""}

        sed -i "s/0.0.0.0/$version/g" ${ProjectAssemblyInfo}
        sed -i "s/0.0.0.0/$version/g" ${SetupProductFile}

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
       
    # Setup NuGet
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.6

    # Restore NuGet Packages
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionFile
    
    # Build the package with MSBuild
    - name: Build package
      run: |
        msbuild $env:SolutionFile /p:Configuration=$env:Configuration
        mkdir "${env:SignDir}"
        mv "${env:ProjectDir}/bin/${env:Configuration}/ExcelReporter.exe" "${env:SignDir}"
        mv "${env:SetupDir}/bin/${env:Configuration}/excel_reporter.msi" "${env:SignDir}"
        
    # sign artifacts
    - name: Sign artifact
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: "${{ secrets.BASE64_ENCODED_PFX }}"
        cert-password: "${{ secrets.PFX_KEY }}"
        cert-sha1: "${{ secrets.PFX_HASH }}"
        cert-description: "Excel-Reporter"
        folder: "${{ env.SignDir }}"
        recursive: true
        timestamp-server: "http://timestamp.digicert.com"
        
    # Copy artifacts and prepare a zip for upload
    - name: Prepare artifacts
      shell: bash
      run: |
        # Define some variables for things we need
        tag=$(git describe --tags --abbrev=0)
        release_name="excel-reporter-${tag}-${Configuration,,}"

        # pack files
        mv "${SignDir}/ExcelReporter.exe" "${ProjectDir}/bin/${Configuration}/*"
        7z a -tzip "${release_name}.zip" "${ProjectDir}/bin/${Configuration}/*"
        mv "${SignDir}/excel_reporter.msi" "${release_name}.msi"

        # show files
        ls excel-reporter*

        # remove signcert
        rm -rf "${SignDir}"

    # publish
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: |
          excel-reporter*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}